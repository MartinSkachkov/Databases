use movies

select * from MOVIE

-- ???. 1.
-- ?) ?? ?? ??????? ????, ?? ?? ?? ???? ??? ????? ?? ???? ??????? ???????.
alter table MOVIE
add constraint UC_LENGTH unique(LENGTH)

-- ?) ?? ?? ??????? ????, ?? ?? ?? ???? ???? ?????? ?? ??? ??? ????? ? ??????? ???????
alter table MOVIE
add constraint UC_STUDIO_MVLEN unique(STUDIONAME, LENGTH)

-- ???. 2. ???????? ????????????? ?? ????? ?????? ?? Movie.
alter table MOVIE
drop constraint UC_LENGTH

alter table MOVIE
drop constraint UC_STUDIO_MVLEN

-- ???. 3.  
-- ?) ?? ????? ??????? ?? ????????? ???????? ??????????: 
-- ???. ????? - ?? 0 ?? 99999, ???????? ????; 
-- ??? - ?? 100 ???????; 
-- ??? - ????? 10 ???????, ????????; 
-- e-mail - ?? 100 ???????, ????????; 
-- ??????? ????; 
-- ???? ?? ???????? ? ???????????? - ?????? ?? ???? ???? 18 ?????? ???? ?????????; 
-- ?? ?????? ???????? ???????????? ?????? ?? ??? ???????? ???????? (?? ???? NULL)
use my_db

create table Student (
	FacultyNumber int NOT NULL,
	FullName varchar(100) NOT NULL,
	EGN char(10) NOT NULL,
	Email varchar(100) NOT NULL,
	BirthDate date NOT NULL,
	EnrollmentDate date NOT NULL,

	constraint PK_F_Num PRIMARY KEY(FacultyNumber),
	constraint CK_F_Num CHECK(FacultyNumber >= 0 and FacultyNumber <= 99999),
	constraint UQ_Egn UNIQUE(EGN),
	constraint UQ_Email UNIQUE(Email),
	constraint CK_Enrollment_Date CHECK(EnrollmentDate >= DATEADD(year, 18, BirthDate))
)

select * from Student

-- ?) ???????? ????????? ?? e-mail ?????? - ?? ???? ??? ?????? <????>@<????>.<????>
alter table Student
add constraint CK_Email_Format CHECK(Email like '%@%.%')

-- ?) ???????? ??????? ?? ?????????????? ??????? - ???????? ????? ? ???
create table Courses (
	Name varchar(100) NOT NULL,
	Number int NOT NULL,

	constraint PK_CourseNum PRIMARY KEY(Number),
	constraint UQ_CourseName UNIQUE(Name)
)

-- ????? ??????? ???? ?? ?? ?????? ? ????? ??????? ? ??? ????? ???? ???? ?? ??? ???????? ????? ????????. 
-- ??? ????????? ?? ????? ???? ??????????? ?? ?? ???????? ?????? ???????? ?? ????.
create table StudentCourse (
	StudentNumber int NOT NULL,
	CourseNumber int NOT NULL,

	constraint PK_StudentCourse PRIMARY KEY(StudentNumber, CourseNumber),
	constraint FK_Student FOREIGN KEY(StudentNumber) REFERENCES Student(FacultyNumber) ON DELETE CASCADE,
	constraint FK_Course FOREIGN KEY(CourseNumber) REFERENCES Courses(Number) ON DELETE CASCADE
)

-- ON DELETE CASCADE ????????, ?? ??? ????? ???? ???? ??????, ?????? ?????? ? StudentCourses, ????? ?? ??????? ?? ???? ????, ???? ?? ????? ??????????? ???????.